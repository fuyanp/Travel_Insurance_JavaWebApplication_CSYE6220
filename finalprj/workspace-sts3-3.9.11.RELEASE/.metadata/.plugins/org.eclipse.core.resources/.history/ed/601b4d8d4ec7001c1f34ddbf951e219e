package com.me.insurancesystemproject;

import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.me.dao.ClientDAO;
import com.me.pojo.Client;

@Controller
public class ClientController {
	@Autowired
	@Qualifier("client")
	Client c;
	
	@RequestMapping(value = "/getallclients.htm", method = RequestMethod.POST)
	@ResponseBody
	public String getAllClient(Model model,HttpServletRequest request,
            HttpServletResponse response,ClientDAO clientdao) {
		List<Client> cl=clientdao.getAllClients();
		Gson gson=new Gson();
		String clientjson=gson.toJson(cl);
		//model.addAttribute("curclient", c );
		
		return clientjson;
	}
	
	@RequestMapping(value = "/getclientdetail.htm", method = RequestMethod.POST)
	@ResponseBody
	public String clientDetail(Model model,HttpServletRequest request,
            HttpServletResponse response,ClientDAO clientdao) {
		Client cl=clientdao.getClient(Integer.parseInt(request.getParameter("rqclientid")));
		Gson gson=new Gson();
		String clientjson=gson.toJson(cl);
		//model.addAttribute("curclient", c );
		
		return clientjson;
	}
	
	@RequestMapping(value = "/deleteclient.htm", method = RequestMethod.POST)
	@ResponseBody
	public String removeClient(Model model,HttpServletRequest request,
            HttpServletResponse response,ClientDAO clientdao) {
		clientdao.deleteClient(Integer.parseInt(request.getParameter("rqclientid")));
		//Gson gson=new Gson();
		//String clientjson=gson.toJson(cl);
		//model.addAttribute("curclient", c );
		
		return "success";
	}
	
	@RequestMapping(value = "/updateclient.htm", method = RequestMethod.POST)
	@ResponseBody
	public String updateClient(Model model,HttpServletRequest request,
            HttpServletResponse response,ClientDAO clientdao) {
		
		Client c=new Client();
		c.setClientId(Integer.parseInt(request.getParameter("rqclientid")));
		c.setDateOfBirth(request.getParameter("dateofbirth"));
		c.setEmail(request.getParameter("email"));
		c.setFirstName(request.getParameter("firstName"));
		c.setLastName(request.getParameter("lastName"));
		c.setGender(request.getParameter("gender"));
		c.setPasswrod(request.getParameter("passwrod"));
		c.setPhone(request.getParameter("phone"));
		
		clientdao.updateClient(c);
		//Gson gson=new Gson();
		//String policyjson=gson.toJson(cl);
		//model.addAttribute("curclient", c );
		
		return "success";
	}
}
